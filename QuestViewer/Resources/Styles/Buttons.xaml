<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Start: Base button style  -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Height" Value="{StaticResource ButtonHeight}" />
        <!--<Setter Property="RenderOptions.EdgeMode" Value="Aliased" />https://stackoverflow.com/questions/1880506/borderthickness-of-1-renders-with-a-2-pixel-thickness-what-am-i-missing-here-->
    </Style>
    <!--  End: Base button style  -->

    <!--  Start: Primary button style  -->
    <Style
        x:Key="PrimaryButton"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryButtonForeground}" />
        <Setter Property="Background" Value="{StaticResource PrimaryButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="9,5" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource PrimaryButtonHoverBackgroundColor}"
                                        Duration="0:0:0.075" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource PrimaryButtonBackgroundColor}"
                                        Duration="0:0:0.075" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource PrimaryButtonActiveBackgroundColor}"
                                        Duration="0:0:0.075" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource PrimaryButtonBackgroundColor}"
                                        Duration="0:0:0.075" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonDisableForegroundColor}"
                                            Duration="0:0:0.075" />
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonDisableBackgroundColor}"
                                            Duration="0:0:0.075" />
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonDisableBorderColor}"
                                            Duration="0:0:0.075" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonForegroundColor}"
                                            Duration="0:0:0.075" />
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonBackgroundColor}"
                                            Duration="0:0:0.075" />
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource PrimaryButtonBorderColor}"
                                            Duration="0:0:0.075" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Primary button style  -->

    <!--  Start: Secondary button style  -->
    <Style
        x:Key="SecondaryFirstButton"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource SecondaryFirstButtonForeground}" />
        <Setter Property="Background" Value="{StaticResource SecondaryFirstButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryFirstButtonBorder}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryFirstButtonHoverForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryFirstButtonHoverBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryFirstButtonHoverBorder}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryFirstButtonActiveForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryFirstButtonActiveBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryFirstButtonActiveBorder}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryFirstButtonDisableForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryFirstButtonDisableBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryFirstButtonDisableBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SecondaryTwoButton"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTwoButtonForeground}" />
        <Setter Property="Background" Value="{StaticResource SecondaryTwoButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryTwoButtonBorder}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryTwoButtonHoverForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryTwoButtonHoverBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryTwoButtonHoverBorder}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryTwoButtonActiveForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryTwoButtonActiveBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryTwoButtonActiveBorder}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource SecondaryTwoButtonDisableForeground}" />
                            <Setter Property="Background" Value="{StaticResource SecondaryTwoButtonDisableBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryTwoButtonDisableBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Secondary button style  -->


    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource BlackPrimaryColorBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            CornerRadius="{StaticResource ButtonCornerRadius}">
                        <ContentPresenter
                        x:Name="contentPresenter"
                        Focusable="False"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}"
                        RecognizesAccessKey="True"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource GraphBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderLightBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource BlackPrimaryColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BlueUltraSoftColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderLightBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource BlackPrimaryColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource GrayButtonDisableBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GrayButtonDisableForeground}"/>
                        </Trigger>

                        <!--
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource IconButton.Focused.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource IconButton.Focused.Border}"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource IconButton.Focused.Foreground}"/>
                    </Trigger>
                    -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>