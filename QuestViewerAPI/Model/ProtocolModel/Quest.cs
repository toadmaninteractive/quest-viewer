// Author: Igor compiler
// Compiler version: igorc 2.1.4
// DO NOT EDIT THIS FILE - it is machine generated

using System.Collections.Generic;

namespace QuestGraph.Core.Protocol
{
    public enum EdgeType
    {
        Unidirectional = 1,
        Bidirectional = 2,
    }

    public enum NodeType
    {
        State = 1,
        Action = 2,
    }

    public enum CardCategory
    {
        QuestGraph = 0,
    }

    public sealed class Edge
    {
        public string RefId { get; set; }

        public string From { get; set; }

        public string To { get; set; }

        public EdgeType Type { get; set; }
    }

    public sealed class Layout
    {
        public double X { get; set; }

        public double Y { get; set; }

        public double Width { get; set; }

        public double Height { get; set; }
    }

    public abstract class Node
    {
        public string RefId { get; set; }

        public string Name { get; set; }

        public string Description { get; set; }

        public Layout Layout { get; set; }

        public abstract NodeType Type { get; }

        protected Node()
        {
        }
    }

    public sealed class NodeState : Node
    {
        public override NodeType Type => NodeType.State;

        public bool IsActive { get; set; }
    }

    public sealed class NodeAction : Node
    {
        public override NodeType Type => NodeType.Action;
    }

    public sealed class GraphPreset
    {
        public string Name { get; set; }

        public string Description { get; set; }

        public Dictionary<string, bool> NodeState { get; set; }
    }

    public abstract class Card
    {
        public abstract CardCategory Category { get; }

        public string Id { get; set; }

        protected Card()
        {
        }
    }

    public sealed class CardQuestGraph : Card
    {
        public override CardCategory Category => CardCategory.QuestGraph;

        public List<Node> Nodes { get; set; }

        public List<Edge> Edges { get; set; }

        public List<GraphPreset> Presets { get; set; }
    }
}